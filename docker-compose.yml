version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    env_file: .env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d posts"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:9.3
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  redis:
    image: redis:6-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  api_posts:
    build: ./api_posts
    env_file: .env
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - REDIS_PORT
      - REDIS_DB
      - REDIS_CACHE_TTL
      - SECRET_KEY
      - ALGORITHM
      - ACCESS_TOKEN_EXPIRE_MINUTES
      - POSTGRES_HOST
      - REDIS_HOST
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  bot_posts:
    build: ./bot_posts
    env_file: .env
    environment:
      - TELEGRAM_BOT_TOKEN
      - API_URL
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
